<?php
/**
 * @project Simple PHP Form Mailer
 * @subpackage mailer
 * @version 0.0.3
 * @authorUri: http://www.keepitnative.ch
 * @author peterruler, based on script by roger klein, www.klick-info.ch
 * @copyright (c) 2014 by peterruler, all rights reserved
 * @license GNU/GPLv3
 * @creationDate 25.11.14
 */

namespace ch\keepitnative\formmailer\src\mailer;

require_once __DIR__ . '/MailerInterface.php';
use ch\keepitnative\formmailer\config\SettingsInterface;
use ch\keepitnative\formmailer\src\config\ConfigRegistryInterface;
use ch\keepitnative\formmailer\src\config\Registry;
use ch\keepitnative\formmailer\src\input\InputInterface;
use ch\keepitnative\formmailer\src\mailer\MailerInterface;
use ch\keepitnative\formmailer\src\error\ErrorInterface;
use ch\keepitnative\formmailer\src\error\Error;
use ch\keepitnative\formmailer\src\request\Request;

class Mailer implements MailerInterface
{

    public static $errors = null;
    public $input = null;
    public static $hash = null;

    /**
     * @param null $hash
     */
    public static function setHash($hash)
    {
        static::$hash = $hash;
    }

    /**
     * @return null
     */
    public static function getHash()
    {
        return static::$hash;
    }

    /**
     * @param null $errors
     */
    public static function setErrors($errors)
    {
        self::$errors = $errors;
    }

    /**
     * @return null
     */
    public static function getErrors()
    {
        return self::$errors;
    }

    /**
     * @param \ch\keepitnative\formmailer\src\input\InputInterface|null $input
     */
    public function setInput($input)
    {
        $this->input = $input;
    }

    /**
     * @return \ch\keepitnative\formmailer\src\input\InputInterface|null
     */
    public function getInput()
    {
        return $this->input;
    }

    public function __construct(InputInterface &$input = null,ErrorInterface &$errors,$hash=null)
    {
        $this->input = $input;
        $registry = Registry::getInstance();
        $hash =$registry->get('config')['hash'];
        static::setHash($hash);
        static::$errors = $errors;
    }

    public static function getMsg($arr)
    {
        $newArr['Strasse/ Nr'] = $arr['strassenr'];
        unset($arr['Strassenr']);
        $newArr['Plz/ Ort'] = $arr['plzort'];
        unset($arr['plzort']);
        $arr = array_slice($arr,0,3,true) +$newArr+ array_slice($arr,3,count($arr));
        //print_r($arr);exit;
        $msg = [];
        foreach ($arr as $k => $v) :
            //yield $k . ":\t" . $v . "\n";
            $msg[] = $k . ":\t" . $v . "\n";
        endforeach;
        return $msg;
    }



    public function sendMail($to = '', $attachment = null, $imgName = '')
    {
        $registry = Registry::getInstance();
        $settings = $registry->get('config');
        //http://webcheatsheet.com/php/send_email_text_html_attachment.php
        $vonAbsender = $this->input->post('email');
        $empfaengerFirma = $settings['empfaenger'];
        $nameAbsender = $this->input->post('vorname') . $this->input->post('nachname');
        $betreff = $settings['thema'];


        //so we use the MD5 algorithm to generate a random hash
        $random_hash = md5(date('r', time()));
        $headers = '';
        //define the headers we want passed. Note that they are separated with \r\n
        if (isset($from) && isset($to)) {
            $headers = "From: $empfaengerFirma\r\nReply-To: $empfaengerFirma";
        }

        //add boundary string and mime type specification
        $headers .= "\r\nContent-Type: multipart/mixed; boundary=\"PHP-mixed-" . $random_hash . "\"";

        $msg = '';
        $msg2 = '';

        $msgArr = [];
        $msgArr = $this->input->post('all');
        unset($msgArr[static::$hash]);
        unset($msgArr['captcha']);

        foreach(static::getMsg($msgArr) as $txt) {
            $msg .= $txt;
        }

        $msg2 = implode('<br>',static::getMsg($msgArr));
        //var_dump($options);Exit;
        //print_r($msg);exit;
        if (!is_null($attachment) || !empty($imgName)) {
            //http://stackoverflow.com/questions/6275070/php-mail-attachment-problems
            $base = basename($attachment);
            $file = fopen($attachment, 'rb');
            $size = filesize($attachment);
            $data = fread($file, $size);
            fclose($file);
            $attachment = chunk_split(base64_encode($data));

            $separator = md5(time());

            // carriage return type (we use a PHP end of line constant)
            $eol = PHP_EOL;

            // attachment name
            $filename = $imgName;

            //$pdfdoc is PDF generated by FPDF
            $attachment = chunk_split(base64_encode($data));
            /*
            ob_start();
            require_once BASE_PATH.'/mailtmpl/headers.php';
            $headers = ob_get_contents();
            ob_start();
            require_once BASE_PATH.'/mailtmpl/html_attachment.php';

            $message = ob_get_contents();
            */
            //var_dump($headers);exit;

            // main header
            $headers = "From: " . $empfaengerFirma . $eol;
            $headers .= "MIME-Version: 1.0" . $eol;
            $headers .= "Content-Type: multipart/mixed; boundary=\"" . $separator . "\"";

            // no more headers after this, we start the body! //

            $message = "--" . $separator . $eol;
            $message .= "Content-Transfer-Encoding: 7bit" . $eol . $eol;
            $message .= "Offerte" . $eol;
            $message .= $msg . $eol;

            // message
            $message .= "--" . $separator . $eol;
            $message .= "Content-Type: text/html; charset=\"iso-8859-1\"" . $eol;
            $message .= "Content-Transfer-Encoding: 8bit" . $eol . $eol;
            $message .= $msg . $eol;

            // attachment
            $message .= "--" . $separator . $eol;
            $message .= "Content-Type: application/octet-stream; name=\"" . $filename . "\"" . $eol;
            $message .= "Content-Transfer-Encoding: base64" . $eol;
            $message .= "Content-Disposition: attachment" . $eol . $eol;
            $message .= $attachment . $eol;
            $message .= "--" . $separator . "--";


        } else {
            //http://www.php-kurs.com/html-e-mail-mit-php-erstellen.htm

            $headers = "MIME-Version: 1.0\r\n";
            $headers .= "Content-type: text/html; charset=iso-8859-1\r\n";

            $headers .= "From: $empfaengerFirma\r\n";
            $headers .= "Reply-To: $empfaengerFirma\r\n";
            // $header .= "Cc: $cc\r\n";  // falls an CC gesendet werden soll
            $headers .= "X-Mailer: PHP " . phpversion();
            $message = '<html><head><title>Offerte</title></head><body>';
            $message .= '<h1>Offerte</h1><p>';
            $message .= $msg2;

            $message . '<p></body></html>';
        }
        $success = FALSE;
        //var_dump($to, $betreff, $message, $headers);
        if (@mail($to, $betreff, $message, $headers)) {
            //var_dump(mail($from, $subject, $message, $headers));
            //var_dump('before mail succeess');exit;
            //var_dump(error_get_last());exit;
            //static::setMailMsg('mail-success','Email erfolgreich versendet!');
            $success = TRUE;
        }
        return $success;
    }
}
